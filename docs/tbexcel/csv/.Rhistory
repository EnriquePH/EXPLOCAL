library(rgdal)
install.packages("rgdal")
library(raster)
install.packages("raster")
library(rgdal)
library(raster)
# Read in data on major cities
cities <- read.csv("ciutats.csv", header=FALSE, encoding='UTF-8',
col.names=c('zona', 'codigoine', 'mean_lon', 'mean_lat', 'nombre'))
# Read in province polygons
pr <- subset(readOGR('.', 'poligonos_provincia_etrs89', encoding='UTF-8'),
CODINE %in% c('46', '12', '03'))
# Subset municipal polygons to selected provinces
muni <- subset(readOGR('.', 'poligonos_municipio_etrs89', encoding='UTF-8'),
library(XML)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
# Get the data
data.url <- "http://www.thewindpower.net/turbines_manufacturers_en.php"
doc <- htmlParse(data.url)
data <- readHTMLTable(doc,
colClasses = c("character", "character", "character"),
trim = TRUE,
which = 6
)
# Remove empty rows
data <- filter(data, Country != "")
View(data)
write.table(data,
file = "turbines_manufacturers_en.csv",
col.names = NA,
sep = ",")
# Plot Number of Turbine Manufacturers by Country
plot.data <- data %>%
group_by(Country) %>%
summarise(Freq = n()) %>%
mutate(Country = factor(Country, levels = rev(levels(Country))))
View(plot.data)
# A bar graph
# http://stackoverflow.com/questions/32160646/sort-country-names-in-ggplot2-bar-plot
ggplot(plot.data, aes(Country , Freq,  fill = Country)) +
coord_flip() +
geom_bar(stat = "identity", width = .90) +
xlab("") + # Set axis labels
ylab("") +
guides(fill = FALSE) +
ggtitle("Number of Turbine Manufacturers by Country") +
theme_minimal()
plot.data2 <- data %>%
separate(col = Remark,
into = c("Text", "Year"),
sep = " \\(",
remove = FALSE,
extra = "merge") %>%
mutate(Year, Year=gsub("\\)", "", Year)) %>%
mutate(Year, Year=gsub("\\#NA", NA , Year))
View(plot.data2)
plot.data3 <- plot.data2 %>%
group_by(Text) %>%
summarise(Freq = n())
View(plot.data3)
# A pie chart = stacked bar chart + polar coordinates
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette ="Blues") +
theme_minimal() +
geom_text(aes(y = Freq/2 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq / sum(Freq))), size = 5)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- "
Date       NO2         SO2          O3
2004-01-01  24.49864    2.756818    30.17857
2004-01-02  33.40000    3.912609    22.45514
2004-01-03  27.55435    5.654783    24.33342
2004-01-04  24.87391    8.910000    30.64569
2004-01-05  41.96348    10.893478   44.92825
2004-01-06  48.80913    13.417391   44.91305
2004-01-07  49.10217    16.808696   28.34968
2004-01-08  49.14217    26.273913   16.61955
2004-01-09  34.52261    8.438261    17.80235
2004-01-10  45.33087    7.955217    36.34493
"
gases.data <- read.delim(textConnection(data), sep = "")
gases.data <- gases.data %>%
mutate(Date = as.Date(Date, "%Y-%m-%d")) %>%
gather(key = Gas, value = Concentration, -Date)
View(gases.data)
ggplot(gases.data, aes(Date, Concentration, col = Gas)) +
ylab("Concentration") +
#geom_line() +
stat_smooth(method = loess) +
scale_colour_hue(
labels=c(expression(NO[2]),
expression(SO[2]),
expression(O[3])
)) +
# Remove legend title
theme(legend.title = element_blank())
library(ggplot2)
OEIS_bFile <- function(seq){
# Returns the bFile name associated to a OEIS sequence
#
# Args:
#   seq: OEIS sequence Id, consist on the letter A and 6 digits
#
# Returns:
#    A string with the OEIS' bFile name.
return(paste("b", substr(seq, 2, nchar(seq)), ".txt", sep = ""))
}
OEIS_sequence_url <- function(seq, bFile = FALSE){
# Returns bFile or sequence url in OEIS
#
# Args:
#   seq: OEIS sequence Id
#   bFile: if TRUE returns bfile url, and sequence url otherwise
#
# Returns:
#    A string with the OEIS url required
OEIS_url <- "http://oeis.org"
if(bFile){
# bFile url
return(paste(OEIS_url, seq, OEIS_bFile(seq), sep = "/"))
} else {
# Sequence url
return(paste(OEIS_url, seq, sep = "/"))
}
}
# Dedekind Psi Function
my_sequence <- "A001615"
OEIS_bFile(my_sequence)
OEIS_sequence_url(my_sequence)
my_bFile <- OEIS_sequence_url(my_sequence, bFile = TRUE)
data <- read.csv(my_bFile,
header = FALSE,
sep = " ",
col.names = c("n", my_sequence)
)
#View(data)
ggplot(data, aes(x = n, y = eval(parse(text = my_sequence)))) +
geom_point(size = .1, colour = "red") +
ylab(my_sequence)
remove.packages("manipulate")
install.packages("manipulate")
library(ggplot2)
my_labels <- expression(0, pi / 2, pi, 3 * pi / 4, 2 * pi)
ggplot(data.frame(x = c(0, 2*pi)), aes(x)) +
stat_function(fun = sin, colour = "red", size = 2) +
stat_function(fun = cos, colour = "blue", size = 2) +
scale_x_continuous(breaks = 0:4  * pi / 2,
labels = my_labels) +
ylab("f(x)")
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit<- lm( y ~ x - 1 )
summary(fit) # 0.8263
fit$coefficients
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit) # -5.3445
fit$coefficients
library(ggplot2)
ggplot(fit, aec(x = mpg, y = wt)) +
geom_line()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_line()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point() +
stat_smooth(method="lm", se=FALSE)
fit$coefficients
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
corOfYandX <- 0.5
sdYoverX <- 2
beta1 <- corOfYandX*sdYoverX
beta1 # 1
getwd()
parent.frame(2)
parent.frame
parent.frame(2)
R_GlobalEnv
script.dir <- dirname(sys.frame(1)$ofile)
sys.frame(1)
getSrcDirectory(function(x) {x})
getSrcDirectory(function(x) {x})
system.file()
script.dir
script.dir()
dirname(sys.frame(1)$ofile)
sys.frame
sys.frame
source(..., chdir = T)
sys.source
sys.source()
source("EXPLOCAL.R", chdir = T)
source("EXPLOCAL.R", chdir = T)
source("EXPLOCAL.R", chdir = F)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
setwd("C:/CODE/mycode/02-PROJECT1500/09-myprojects/05-EXPLOCAL/Explocal-GIT/docs/tbexcel/csv")
library(dplyr)
library(tidyr)
library(ggplot2)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
ggplot(entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
# Constants data
# File K1.csv
k1.file <- "K1.CSV"
# Temperatura (K)
# K1= PCO.PH2O / PCO2·PH2
# K2=P²CO/PCO2
k1.data <- read.csv(k1.file,
dec = ",",
sep = ";",
col.names = c("T", "K1", "K2"),
skip = 1
)
View(k1.data)
setwd("C:/CODE/mycode/02-PROJECT1500/09-myprojects/05-EXPLOCAL/Explocal-GIT/docs/tbexcel/csv")
library(dplyr)
library(tidyr)
library(ggplot2)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
ggplot(entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
carbonates <- entalp.data %>%
group_by(FORMULA)
View(carbonates)
entalp.data <- entalp.data %>%
carbonates <- entalp.data %>%
select(FORMULA) %>%
group_by(FORMULA)
carbonates <- entalp.data %>%
select(FORMULA)
#group_by(FORMULA)
View(carbonates)
select(FORMULA) %>%
group_by(FORMULA)
carbonates <- entalp.data %>%
select(FORMULA) %>%
group_by(FORMULA)
View(carbonates)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
carbonates <- column.names(entalp.data)
carbonates <- col.names(entalp.data)
carbonates <- colnames(entalp.data)
View(carbonates)
carbonates <- as.df(colnames(entalp.data))
carbonates <- as.data.frame(colnames(entalp.data))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data))
carbonates <- select(carbonates, contains("CO3"))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data), make.names("X"))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates, c("FORMULA"))
carbonates <- select(carbonates$FORMULA, contains("CO3"))
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates, c("FORMULA"))
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- select(carbonates$FORMULA, contains("CO3"))
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- select(carbonates, contains("CO3"))
View(carbonates)
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
View(carbonates)
carbonates <- select(carbonates, FORMULA,  contains("CO3"))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- select(carbonates, FORMULA,  contains("CO3"))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- select(carbonates, FORMULA,  contains("CO3"))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  !grepl("CO3", TrackingPixel))
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  !grepl("CO3", FORMULA))
View(carbonates)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  grepl("CO3", FORMULA))
View(carbonates)
View(carbonates)
library(dplyr)
library(tidyr)
library(ggplot2)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  grepl("CO3", FORMULA))
View(carbonates)
carbonates.entalp.data <- filter(entalp.data, carbonates in FORMULA)
carbonates.entalp.data <- filter(entalp.data, FORMULA in carbonates)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  grepl("CO3", FORMULA))
View(carbonates)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
carbonates.entalp.data <- filter(entalp.data, FORMULA in carbonates)
View(carbonates)
"K2CO3" in carbonates
carbonates.entalp.data <- filter(entalp.data, FORMULA %in% carbonates)
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  grepl("CO3", FORMULA))
View(carbonates)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  grepl("CO3", FORMULA))
View(carbonates)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
carbonates.entalp.data <- filter(entalp.data, FORMULA %in% carbonates)
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
carbonates.entalp.data
View(carbonates.entalp.data)
carbonates
carbonates.entalp.data <- filter(entalp.data, entalp.data$FORMULA %in% carbonates)
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
View(carbonates.entalp.data)
carbonates.entalp.data <- entalp.data %>%
filter(FORMULA %in% carbonates)
View(carbonates.entalp.data)
View(entalp.data)
install.packages(c("manipulate", "Rcpp", "tidyr"))
entalp.data$FORMULA %in% carbonates
library(dplyr)
library(tidyr)
library(ggplot2)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
carbonates <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(carbonates) <- c("FORMULA")
carbonates <- filter(carbonates,  grepl("CO3", FORMULA))
View(carbonates)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
carbonates.entalp.data <- entalp.data %>%
filter(FORMULA %in% carbonates)
entalp.data$FORMULA %in% carbonates
entalp.data$FORMULA %in% carbonates$FORMULA
carbonates.entalp.data <- entalp.data %>%
filter(FORMULA %in% carbonates$FORMULA)
View(carbonates.entalp.data)
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_point()
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
compounds <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(compounds) <- c("FORMULA")
carbonates <- filter(compounds,  grepl("CO3", FORMULA))
View(carbonates)
View(compounds)
compounds <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(compounds) <- c("FORMULA")
compounds <- filter(compounds, !grepl("TEMP", FORMULA))
View(compounds)
explosion.products <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(explosion.products ) <- c("FORMULA")
explosion.products  <- filter(explosion.products, !grepl("TEMP", FORMULA))
carbonates <- filter(explosion.products ,  grepl("CO3", FORMULA))
View(carbonates)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
carbonates.entalp.data <- entalp.data %>%
filter(FORMULA %in% carbonates$FORMULA)
View(carbonates.entalp.data)
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Enthalpy") +
geom_line()
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
xlab("Temperature (K)")
ylab("Enthalpy") +
geom_line()
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
xlab("Temperature (K)") +
ylab("Enthalpy") +
geom_line()
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
xlab("Temperature (K)") +
carbonates <- filter(explosion.products,  grepl("CO3", FORMULA))
dioxides <- filter(explosion.products,  grepl("O2", FORMULA))
library(dplyr)
library(tidyr)
library(ggplot2)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
explosion.products <- as.data.frame(colnames(entalp.data), optional = TRUE)
colnames(explosion.products) <- c("FORMULA")
explosion.products  <- filter(explosion.products, !grepl("TEMP", FORMULA))
carbonates <- filter(explosion.products,  grepl("CO3", FORMULA))
dioxides <- filter(explosion.products,  grepl("O2", FORMULA))
View(dioxides)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
carbonates.entalp.data <- entalp.data %>%
filter(FORMULA %in% carbonates$FORMULA)
ggplot(carbonates.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
xlab("Temperature (K)") +
ylab("H(T)-H(298) kcal/mol") +
geom_line()
dioxides.entalp.data <- entalp.data %>%
filter(FORMULA %in% dioxides$FORMULA)
ggplot(dioxides.entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
xlab("Temperature (K)") +
ylab("H(T)-H(298) kcal/mol") +
geom_line()
