label = percent(Freq/100)), size=5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size=5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_minimal() +
theme(axis.title.x = element_blank()) +
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_light() +
theme(axis.title.x = element_blank()) +
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_light() +
axis.title.x = element_blank() +
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_light() +
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_light() +
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_light() +
geom_text(aes(y = Freq + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_light() +
geom_text(aes(y = Freq/4 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size = 5)
geom_text(aes(y = Freq/4 + c(0, cumsum(Freq)[-length(Freq)]),
# A pie chart = stacked bar chart + polar coordinates
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette="Blues") +
theme_light() +
geom_text(aes(y = Freq/4 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/sum(Freq))), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette ="Blues") +
theme_classic() +
geom_text(aes(y = Freq/4 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq / sum(Freq))), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette ="Blues") +
theme_classic() +
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq / sum(Freq))), size = 5)
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette ="Blues") +
theme_classic() +
geom_text(aes(y = Freq/2 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq / sum(Freq))), size = 5)
# A pie chart = stacked bar chart + polar coordinates
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette ="Blues") +
theme_minimal() +
geom_text(aes(y = Freq/2 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq / sum(Freq))), size = 5)
#scale_y_continuous(labels = percent_format())
library(ggmap)
install.packages(ggmap)
install.packages("ggmap")
install.packages("ggmap")
install.packages("mapproj")
library(ggmap)
library(mapproj)
map <- get_map(location = 'Europe', zoom = 4)
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = 'Spain', zoom = 4)
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = 'Spain', zoom = 10)
ggmap(map)
library(maptools)
xx <- readShapePoly(system.file("shapes/sids.shp", package="maptools")[1],
IDvar="FIPSNO", proj4string=CRS("+proj=longlat +ellps=clrk66"))
plot(xx, border="blue", axes=TRUE, las=1)
text(coordinates(xx), labels=row.names(xx), cex=0.6)
as(xx, "data.frame")[1:5, 1:6]
xxx <- xx[xx$SID74 < 2,]
plot(xxx, border="red", add=TRUE)
tmpfl <- paste(tempdir(), "xxpoly", sep="/")
writePolyShape(xxx, tmpfl)
getinfo.shape(paste(tmpfl, ".shp", sep=""))
axx <- readShapePoly(tmpfl, proj4string=CRS("+proj=longlat +ellps=clrk66"))
plot(xxx, border="black", lwd=4)
plot(axx, border="yellow", lwd=1, add=TRUE)
unlink(paste(tmpfl, ".*", sep=""))
install.packages("mapdata")
help(mapdata)
??map_data
require("rgdal")
require("maptools")
require("ggplot2")
require("plyr")
require("rgdal")
require("maptools")
require("ggplot2")
require("plyr")
# read temperature data
setwd("<location if your data file>")
temp.data        <- read.csv(file = "levels.dat", header=TRUE, sep=" ", na.string="NA", dec=".", strip.white=TRUE)
temp.data$CODINE <- str_pad(temp.data$CODINE, width = 5, side = 'left', pad = '0')
# read municipality polygons
setwd("<location of your shapefile")
esp     <- readOGR(dsn=".", layer="poligonos_municipio_etrs89")
muni    <- subset(esp, esp$PROVINCIA == "46" | esp$PROVINCIA == "12" | esp$PROVINCIA == "3")
# fortify and merge: muni.df is used in ggplot
require("rgdal")
require("maptools")
require("ggplot2")
require("plyr")
library(rgdal)
install.packages("rgdal")
library(raster)
install.packages("raster")
library(rgdal)
library(raster)
# Read in data on major cities
cities <- read.csv("ciutats.csv", header=FALSE, encoding='UTF-8',
col.names=c('zona', 'codigoine', 'mean_lon', 'mean_lat', 'nombre'))
# Read in province polygons
pr <- subset(readOGR('.', 'poligonos_provincia_etrs89', encoding='UTF-8'),
CODINE %in% c('46', '12', '03'))
# Subset municipal polygons to selected provinces
muni <- subset(readOGR('.', 'poligonos_municipio_etrs89', encoding='UTF-8'),
library(XML)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
# Get the data
data.url <- "http://www.thewindpower.net/turbines_manufacturers_en.php"
doc <- htmlParse(data.url)
data <- readHTMLTable(doc,
colClasses = c("character", "character", "character"),
trim = TRUE,
which = 6
)
# Remove empty rows
data <- filter(data, Country != "")
View(data)
write.table(data,
file = "turbines_manufacturers_en.csv",
col.names = NA,
sep = ",")
# Plot Number of Turbine Manufacturers by Country
plot.data <- data %>%
group_by(Country) %>%
summarise(Freq = n()) %>%
mutate(Country = factor(Country, levels = rev(levels(Country))))
View(plot.data)
# A bar graph
# http://stackoverflow.com/questions/32160646/sort-country-names-in-ggplot2-bar-plot
ggplot(plot.data, aes(Country , Freq,  fill = Country)) +
coord_flip() +
geom_bar(stat = "identity", width = .90) +
xlab("") + # Set axis labels
ylab("") +
guides(fill = FALSE) +
ggtitle("Number of Turbine Manufacturers by Country") +
theme_minimal()
plot.data2 <- data %>%
separate(col = Remark,
into = c("Text", "Year"),
sep = " \\(",
remove = FALSE,
extra = "merge") %>%
mutate(Year, Year=gsub("\\)", "", Year)) %>%
mutate(Year, Year=gsub("\\#NA", NA , Year))
View(plot.data2)
plot.data3 <- plot.data2 %>%
group_by(Text) %>%
summarise(Freq = n())
View(plot.data3)
# A pie chart = stacked bar chart + polar coordinates
ggplot(plot.data3, aes(x = factor(1), y = Freq, fill = Text)) +
geom_bar(width = 1, stat = "identity") +
xlab("") +
ylab("") +
coord_polar(theta = "y") +
scale_fill_brewer(palette ="Blues") +
theme_minimal() +
geom_text(aes(y = Freq/2 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq / sum(Freq))), size = 5)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- "
Date       NO2         SO2          O3
2004-01-01  24.49864    2.756818    30.17857
2004-01-02  33.40000    3.912609    22.45514
2004-01-03  27.55435    5.654783    24.33342
2004-01-04  24.87391    8.910000    30.64569
2004-01-05  41.96348    10.893478   44.92825
2004-01-06  48.80913    13.417391   44.91305
2004-01-07  49.10217    16.808696   28.34968
2004-01-08  49.14217    26.273913   16.61955
2004-01-09  34.52261    8.438261    17.80235
2004-01-10  45.33087    7.955217    36.34493
"
gases.data <- read.delim(textConnection(data), sep = "")
gases.data <- gases.data %>%
mutate(Date = as.Date(Date, "%Y-%m-%d")) %>%
gather(key = Gas, value = Concentration, -Date)
View(gases.data)
ggplot(gases.data, aes(Date, Concentration, col = Gas)) +
ylab("Concentration") +
#geom_line() +
stat_smooth(method = loess) +
scale_colour_hue(
labels=c(expression(NO[2]),
expression(SO[2]),
expression(O[3])
)) +
# Remove legend title
theme(legend.title = element_blank())
library(ggplot2)
OEIS_bFile <- function(seq){
# Returns the bFile name associated to a OEIS sequence
#
# Args:
#   seq: OEIS sequence Id, consist on the letter A and 6 digits
#
# Returns:
#    A string with the OEIS' bFile name.
return(paste("b", substr(seq, 2, nchar(seq)), ".txt", sep = ""))
}
OEIS_sequence_url <- function(seq, bFile = FALSE){
# Returns bFile or sequence url in OEIS
#
# Args:
#   seq: OEIS sequence Id
#   bFile: if TRUE returns bfile url, and sequence url otherwise
#
# Returns:
#    A string with the OEIS url required
OEIS_url <- "http://oeis.org"
if(bFile){
# bFile url
return(paste(OEIS_url, seq, OEIS_bFile(seq), sep = "/"))
} else {
# Sequence url
return(paste(OEIS_url, seq, sep = "/"))
}
}
# Dedekind Psi Function
my_sequence <- "A001615"
OEIS_bFile(my_sequence)
OEIS_sequence_url(my_sequence)
my_bFile <- OEIS_sequence_url(my_sequence, bFile = TRUE)
data <- read.csv(my_bFile,
header = FALSE,
sep = " ",
col.names = c("n", my_sequence)
)
#View(data)
ggplot(data, aes(x = n, y = eval(parse(text = my_sequence)))) +
geom_point(size = .1, colour = "red") +
ylab(my_sequence)
remove.packages("manipulate")
install.packages("manipulate")
library(ggplot2)
my_labels <- expression(0, pi / 2, pi, 3 * pi / 4, 2 * pi)
ggplot(data.frame(x = c(0, 2*pi)), aes(x)) +
stat_function(fun = sin, colour = "red", size = 2) +
stat_function(fun = cos, colour = "blue", size = 2) +
scale_x_continuous(breaks = 0:4  * pi / 2,
labels = my_labels) +
ylab("f(x)")
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit<- lm( y ~ x - 1 )
summary(fit) # 0.8263
fit$coefficients
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit) # -5.3445
fit$coefficients
library(ggplot2)
ggplot(fit, aec(x = mpg, y = wt)) +
geom_line()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_line()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point()
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point() +
stat_smooth(method="lm", se=FALSE)
fit$coefficients
ggplot(fit, aes(x = mpg, y = wt)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
corOfYandX <- 0.5
sdYoverX <- 2
beta1 <- corOfYandX*sdYoverX
beta1 # 1
library(ggplot2)
k.file <- "K.CSV"
k.data <- read.csv(k.file,
dec = ",",
sep = ";",
col.names = c("T", "K1", "K2"),
skip = 1
)
setwd("C:/CODE/mycode/02-PROJECT1500/09-myprojects/05-EXPLOCAL/Explocal-GIT/docs/tbexcel/csv")
k.file <- "K.CSV"
k.data <- read.csv(k.file,
dec = ",",
sep = ";",
col.names = c("T", "K1", "K2"),
skip = 1
)
k.data <- read.csv(k.file,
dec = ",",
sep = ";",
#col.names = c("T", "K1", "K2"),
skip = 1
)
View(k.data)
k.file <- "ENTALP.CSV"
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";",
#col.names = c("T", "K1", "K2"),
skip = 1
)
View(entalp.data)
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";",
#col.names = c("T", "K1", "K2"),
skip = 0
)
View(entalp.data)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";",
#col.names = c("T", "K1", "K2"),
skip = 0
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = Formula, value = T)
library(dplyr)
library(tidyr)
library(ggplot2)
entalp.data <- entalp.data %>%
gather(key = Formula, value = T)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = Formula, value = Entalp)
View(entalp.data)
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = Formula, value = Entalp)
View(entalp.data)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = Formula, value = TEMP)
View(entalp.data)
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = Formula, value = TEMP, Entalp)
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = Formula, value = TEMP)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = Formula, value = Entalp, -TEMP)
View(entalp.data)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
ggplot(entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
library(dplyr)
library(tidyr)
library(ggplot2)
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
ggplot(entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
ggplot(entalp.data, aes(TEMP$Hg , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
ggplot(entalp.data, aes(TEMP , ENTHALPY, col = Hg)) +
ylab("Concentration") +
geom_line()
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
ggplot(entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
entalp.file <- "ENTALP.CSV"
entalp.data <- read.csv(entalp.file,
dec = ",",
sep = ";"
)
View(entalp.data)
entalp.data <- entalp.data %>%
gather(key = FORMULA, value = ENTHALPY, -TEMP)
ggplot(entalp.data, aes(TEMP , ENTHALPY, col = FORMULA)) +
ylab("Concentration") +
geom_line()
